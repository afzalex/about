# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deployment

on:
  release:
    types: [published]
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - '*.js'
      - '*.json'
      - 'README.md'
      - 'docs/'

jobs:

  deploy-website:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Packaging
      run: |
        npm ci
        npm run build --if-present
    - name: Firebase deployment
      env: 
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        npm run notify-deployment
        npm run deploy

  upload-resume:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

  replicate-to-afzalex:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        sudo apt-get install curl
        sudo apt-get install expect
    
    - name: Replicating README 
      env: 
        GIT_REPOSITORY_TOKEN: ${{ secrets.GIT_REPLICATION_REPOSITORY_TOKEN }}
        PROJECT_REPO: https://github.com/afzalex/afzalex.git
        GIT_REPOSITORY_USERNAME: afzalex
        REPLICATION_FILE_NAME: README.md
      run: |
        git clone ${PROJECT_REPO} replication
        git -C ./replication config user.email afzalex.store@gmail.com
        git -C ./replication config user.name "afzalex bot"
        readmeMd5Orig=($(md5sum ${REPLICATION_FILE_NAME}))
        readmeMd5Targ=($(md5sum ./replication/${REPLICATION_FILE_NAME}))
        if [ ${readmeMd5Orig} != ${readmeMd5Targ} ]; then
          echo Replicating ${REPLICATION_FILE_NAME}
          mv ${REPLICATION_FILE_NAME} ./replication/${REPLICATION_FILE_NAME}
          git -C ./replication add ${REPLICATION_FILE_NAME}
          git -C ./replication commit -m "Updated README.md from afzalex/about"
          cp ./auto-git.sh ./replication
          cd ./replication
          ./auto-git.sh push
        else 
          echo Already upto date...
        fi

